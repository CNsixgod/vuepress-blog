import{_ as e,r as p,o as t,c as o,b as n,d as c,e as s,a as l}from"./app.bd40bae0.js";const i={},u={id:"\u6700\u5C0F\u8986\u76D6\u5B50\u4E32",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#\u6700\u5C0F\u8986\u76D6\u5B50\u4E32","aria-hidden":"true"},"#",-1),k=s(),d={href:"https://leetcode.cn/problems/minimum-window-substring/",target:"_blank",rel:"noopener noreferrer"},v=s("\u6700\u5C0F\u8986\u76D6\u5B50\u4E32"),m=l(`<img src="https://raw.githubusercontent.com/sixgodsama/tz/main/public202207232338486.png" alt="image-20220723233814437" style="zoom:150%;"><h3 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h3><blockquote><ul><li>\u5148\u627E\u51FA\u6240\u6709\u7684\u5305\u542BT\u7684\u5B50\u4E32</li><li>\u627E\u51FA\u957F\u5EA6\u6700\u5C0F\u90A3\u4E2A\u5B50\u4E32\uFF0C\u8FD4\u56DE\u5373\u53EF\u3002</li></ul></blockquote><h3 id="\u89E3\u9898\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u6B65\u9AA4" aria-hidden="true">#</a> \u89E3\u9898\u6B65\u9AA4</h3><ul><li><p>\u7528\u53CC\u6307\u9488\u7EF4\u62A4\u4E00\u4E2A\u6ED1\u52A8\u7A97\u53E3\u3002</p></li><li><p>\u79FB\u52A8\u53F3\u6307\u9488\uFF0C\u627E\u5230\u5305\u542BT\u7684\u5B50\u4E32\uFF0C</p><p>\u79FB\u52A8\u5DE6\u6307\u9488\uFF0C\u5C3D\u91CF\u51CF\u5C11\u5305\u542BT\u7684\u5B50\u4E32\u7684\u957F\u5EA6\u3002</p></li><li><p>\u5FAA\u73AF\u4E0A\u8FF0\u8FC7\u7A0B\uFF0C\u627E\u51FA\u5305\u542BT\u7684\u6700\u5C0F\u5B50\u4E32\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">t</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">minWindow</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">const</span> need <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> c <span class="token keyword">of</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        need<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>need<span class="token punctuation">)</span>
    <span class="token keyword">let</span> needSize <span class="token operator">=</span> need<span class="token punctuation">.</span>size
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>r <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> word <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            need<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> needSize <span class="token operator">-=</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>needSize <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> newRes <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res <span class="token operator">||</span> newRes<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> res<span class="token punctuation">.</span>length<span class="token punctuation">)</span> res <span class="token operator">=</span> newRes<span class="token punctuation">;</span>
            <span class="token keyword">const</span> word2 <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>word2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                need<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>word2<span class="token punctuation">,</span> need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>word2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>need<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>word2<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> needSize <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
            l <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>

        r <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res

<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function b(w,h){const a=p("ExternalLinkIcon");return t(),o("div",null,[n("h2",u,[r,k,n("a",d,[v,c(a)])]),m])}var _=e(i,[["render",b],["__file","6f117317.html.vue"]]);export{_ as default};
