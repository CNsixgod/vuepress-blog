import{_ as n,o as s,c as a,a as t}from"./app.bd40bae0.js";const p={},o=t(`<h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h2><h3 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h3><blockquote><ul><li>\u5206\uFF1A\u628A\u6570\u7EC4\u5288\u6210\u4E24\u534A\uFF0C\u518D\u9012\u5F52\u5730\u5BF9\u5B50\u6570\u7EC4\u8FDB\u884C\u201C\u5206\u201D\u64CD\u4F5C\uFF0C\u76F4\u5230\u5206\u6210\u4E00\u4E2A\u4E2A\u5355\u72EC\u7684\u6570\u3002</li><li>\u5408\uFF1A\u628A\u4E24\u4E2A\u6570\u5408\u5E76\u4E3A\u6709\u5E8F\u6570\u7EC4\uFF0C\u518D\u5BF9\u6709\u5E8F\u6570\u7EC4\u8FDB\u884C\u5408\u5E76\uFF0C\u76F4\u5230\u5168\u90E8\u5B50\u6570\u7EC4\u5408\u5E76\u4E3A\u4E00\u4E2A\u5B8C\u6574\u6570\u7EC4\u3002</li></ul></blockquote><h3 id="\u89E3\u9898\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u6B65\u9AA4" aria-hidden="true">#</a> \u89E3\u9898\u6B65\u9AA4</h3><blockquote><ul><li>\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4 res\uFF0C\u7528\u4E8E\u5B58\u653E\u6700\u7EC8\u6392\u5E8F\u540E\u7684\u6570\u7EC4\u3002</li><li>\u6BD4\u8F83\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4\u7684\u5934\u90E8\uFF0C\u8F83\u5C0F\u8005\u51FA\u961F\u5E76\u63A8\u5165res\u4E2D\u3002</li><li>\u5982\u679C\u4E24\u4E2A\u6570\u7EC4\u8FD8\u6709\u503C\uFF0C\u5C31\u91CD\u590D\u7B2C\u4E8C\u6B65\u3002</li></ul></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span>protortype<span class="token punctuation">.</span><span class="token function-variable function">mergeSort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token function-variable function">rec</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr
    
    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> left <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span>
    <span class="token keyword">const</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>
    <span class="token keyword">const</span> sortedLeft <span class="token operator">=</span> <span class="token function">rec</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>
    <span class="token keyword">const</span> sortedRight <span class="token operator">=</span> <span class="token function">rec</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>sortedLeft<span class="token punctuation">.</span>length <span class="token operator">||</span> sortedRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>sortedLeft<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> sortedRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sortedLeft<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> sortedRight<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> sortedRight<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> sortedLeft<span class="token punctuation">.</span>shift<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sortedLeft<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sortedLeft<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sortedRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sortedRight<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),e=[o];function c(l,i){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","50d20818.html.vue"]]);export{r as default};
